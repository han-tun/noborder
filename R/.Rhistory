plot(st_geometry(contourpoly))
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
head(contourpoly)
dim(contourpoly)
# Colors
cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 10)
# Colors
cols <- carto.pal(pal1 = "blue.pal", n1 = 7, pal2 = "red.pal", n2 = 8)
contourpoly$cols <- cols
contourpoly
# Colors
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 7, pal2 = "red.pal", n2 = 8)
typoLayer(x = contourpoly, var="center",col = contonpoly$cols)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
length(bks)
contourpoly$cols <- inferno(length(bks))
# Colors
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 7, pal2 = "red.pal", n2 = 8)
library(mapview)
# Colors
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 7, pal2 = "red.pal", n2 = 8)
contourpoly$cols <- inferno(length(bks))
library(viridis)
contourpoly$cols <- inferno(length(bks))
contourpoly$cols <- inferno(length(bks)-1)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
# Colors
contourpoly$cols <- carto.pal(pal1 = "greens.pal", n1 = 7, pal2 = "red.pal", n2 = 8)
# contourpoly$cols <- inferno(length(bks)-1)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
# Colors
contourpoly$cols <- carto.pal(pal1 = "green.pal", n1 = 7, pal2 = "red.pal", n2 = 8)
# contourpoly$cols <- inferno(length(bks)-1)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
# Colors
contourpoly$cols <- carto.pal(pal1 = "green.pal", n1 = 7, pal2 = "wine.pal", n2 = 8)
# contourpoly$cols <- inferno(length(bks)-1)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
# Colors
contourpoly$cols <- carto.pal(pal1 = "green.pal", n1 = 7, pal2 = "red.pal", n2 = 8)
# contourpoly$cols <- inferno(length(bks)-1)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
# Colors
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 7, pal2 = "red.pal", n2 = 8)
# contourpoly$cols <- inferno(length(bks)-1)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
smooth <- st_transform(contourpoly, "+proj=longlat +datum=WGS84")
# Colors
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 9, pal2 = "red.pal", n2 = 6)
# contourpoly$cols <- inferno(length(bks)-1)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
# Colors
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 9, pal2 = "red.pal", n2 = 6)
# contourpoly$cols <- inferno(length(bks)-1)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
mystewart$pop <- mystewart$OUTPUT / 1000
bks <- c(0, 25, 50, 100, 250, 500, 1000, 2000, 5000, 10000, 20000, 50000, 100000, 200000, 282647.75355)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
plot(st_geometry(contourpoly))
# Colors
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 9, pal2 = "red.pal", n2 = 6)
# contourpoly$cols <- inferno(length(bks)-1)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
mystewart <- st_read("mystewart.shp")
mystewart$pop <- mystewart$OUTPUT / 1000
bks <- c(0, 25, 50, 100, 250, 500, 1000, 2000, 5000, 10000, 20000, 50000, 100000, 200000, 282647.75355)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
plot(st_geometry(contourpoly))
# Colors
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 9, pal2 = "red.pal", n2 = 6)
length(bks)-1
l <- length(bks)-1
# Colors
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 8, pal2 = "red.pal", n2 = 6)
# contourpoly$cols <- inferno(length(bks)-1)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
mystewart$pop <- mystewart$OUTPUT / 1000
bks <- c(0, 5, 10, 25, 50, 100, 250, 500, 1000, 2000, 5000, 10000, 20000, 50000, 100000, 200000, 282647.75355)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
plot(st_geometry(contourpoly))
# Colors
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 6)
# contourpoly$cols <- inferno(length(bks)-1)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
mystewart$pop <- mystewart$OUTPUT / 1000
bks <- c(0, 5, 10, 25, 50, 100, 250, 500, 1000, 2000, 5000, 10000, 20000, 50000, 100000, 200000, 282647.75355)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
bks <- c(0,, 10, 25, 50, 100, 250, 500, 1000, 2000, 5000, 10000, 20000, 50000, 100000, 200000, 282647.75355)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 5000, 10000, 20000, 50000, 100000, 200000, 282647.75355)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
mystewart <- stewart(knownpts = dots, unknownpts = mygrid,
matdist = mymat, varname = "pop",
typefct = "exponential", span = span,
beta = 3, returnclass = "sf", longlat = T)
mystewart <- st_read("mystewart.shp")
mystewart <- stewart(knownpts = dots, unknownpts = mygrid,
matdist = mymat, varname = "pop",
typefct = "exponential", span = span,
beta = 3, returnclass = "sf", longlat = T)
mystewart$pop <- mystewart$OUTPUT / 1000
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 5000, 10000, 20000, 50000, 100000, 200000, 282647.75355)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
plot(st_geometry(contourpoly))
mystewart$pop <- mystewart$OUTPUT / 1000
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 5000, 10000, 20000, 50000, 100000, 200000, 282647.75355)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 6)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
mystewart$pop <- mystewart$OUTPUT / 1000
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 5000, 10000, 20000, 50000, 100000, 200000, 282647.75355)
bks
length(bks)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 9, pal2 = "red.pal", n2 = 6)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 5000, 7500, 10000, 20000, 50000, 100000, 200000, 282647.75355)
length(bks)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 6)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
mystewart$pop <- mystewart$OUTPUT / 1000
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 5000, 600, 10000, 20000, 50000, 100000, 200000, 282647.75355)
length(bks)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 6)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 5000, 6000, 10000, 20000, 50000, 100000, 200000, 282647.75355)
length(bks)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 6)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 5000, 7000, 10000, 20000, 50000, 100000, 200000, 282647.75355)
length(bks)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 6)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 5000, 8000, 10000, 20000, 50000, 100000, 200000, 282647.75355)
length(bks)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 6)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 5000, 9000, 10000, 20000, 50000, 100000, 200000, 282647.75355)
length(bks)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 6)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 5000, 10000, 20000, 50000, 100000, 200000, 282647.75355)
length(bks)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 6)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 9, pal2 = "red.pal", n2 = 6)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 3000, 5000, 10000, 20000, 50000, 100000, 200000, 282647.75355)
length(bks)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 6)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 4000, 5000, 10000, 20000, 50000, 100000, 200000, 282647.75355)
length(bks)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 6)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
mystewart$pop <- mystewart$OUTPUT / 1000
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 4000, 5000, 10000, 20000, 50000, 100000, 200000, 282647.75355)
length(bks)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 6)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 3500, 5000, 10000, 20000, 50000, 100000, 200000, 282647.75355)
length(bks)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 6)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 3500, 5000, 10000, 15000, 20000, 50000, 100000, 200000, 282647.75355)
length(bks)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 7)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
smooth <- st_transform(contourpoly, "+proj=longlat +datum=WGS84")
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 3500, 5000, 10000, 200005000, 50000, 100000, 200000, 282647.75355)
length(bks)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
200005000
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 7)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
mystewart$pop <- mystewart$OUTPUT / 1000
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 3500, 5000, 10000, 200005000, 50000, 100000, 200000, 282647.75355)
length(bks)
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 3500, 5000, 10000, 20000, 35000, 50000, 100000, 200000, 282647.75355)
length(bks)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 7)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 3500, 5000, 10000, 20000, 35000, 50000, 75000, 100000, 200000, 282647.75355)
length(bks)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 8)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
smooth <- st_transform(contourpoly, "+proj=longlat +datum=WGS84")
mystewart$pop <- mystewart$OUTPUT / 1000
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 3500, 5000, 10000, 20000, 35000, 50000, 75000, 100000, 200000, 282647.75355)
length(bks)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 8)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
fact <- 2
res <- 2
span <- 300000
span <- 200000
# Countries
world <- st_read("data/world.shp")
# prj <- "+proj=eck4 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs"
# world <- st_transform(world, prj)
# Total population grid
r <- raster("data/gpw_v4_population_count_rev11_2020_1_deg.asc")
dots <- aggregate(r, fact=fact, fun=sum)
dots <- as(dots, 'SpatialPointsDataFrame')
dots <- st_as_sf(dots)
# dots <- st_transform(dots, prj)
colnames(dots) <- c("pop","geometry")
# ------------
# Computations
# ------------
dots$id <- c(1:nrow(dots))
mygrid <- CreateGrid(w = world, resolution = res,returnclass = "sf")
plot(st_geometry(mygrid), pch=20, cex = 0.2)
plot(st_geometry(dots), pch=20, col="red", add=T, cex = 0.2)
mymat <- CreateDistMatrix(knownpts = dots, unknownpts = mygrid)
mystewart <- stewart(knownpts = dots, unknownpts = mygrid,
matdist = mymat, varname = "pop",
typefct = "exponential", span = span,
beta = 3, returnclass = "sf", longlat = T)
mystewart$pop <- mystewart$OUTPUT / 1000
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 3500, 5000, 10000, 20000, 35000, 50000, 75000, 100000, 200000, 282647.75355)
length(bks)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 8)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
length(bks)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 8)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 7)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 8, pal2 = "red.pal", n2 = 9)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 8)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 8)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 9, pal2 = "red.pal", n2 = 8)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 10, pal2 = "red.pal", n2 = 7)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 7, pal2 = "red.pal", n2 = 10)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols, border = "white", lwd = 0.1)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols, border = "white", lwd = 0.2)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols, border = "white", lwd = 0.3)
contourpoly$cols <- carto.pal(pal1 = "green.pal", n1 = 7, pal2 = "red.pal", n2 = 10)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols, border = "white", lwd = 0.3)
contourpoly$cols <- carto.pal(pal1 = "sand.pal", n1 = 7, pal2 = "red.pal", n2 = 10)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols, border = "white", lwd = 0.3)
contourpoly$cols <- carto.pal(pal1 = "taupe.pal", n1 = 7, pal2 = "red.pal", n2 = 10)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols, border = "white", lwd = 0.3)
contourpoly$cols <- carto.pal(pal1 = "harmo.pal", n1 = 7, pal2 = "red.pal", n2 = 10)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols, border = "white", lwd = 0.3)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 7, pal2 = "red.pal", n2 = 10)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols, border = "white", lwd = 0.3)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols, border = "white", lwd = 0.2)
# ----------------
# N. LAMBERT, 2019
# ----------------
setwd("/var/www/html/worldpop/R")
# Packages
library(raster)
library(sf)
library(cartography)
library(SpatialPosition)
library(geojsonio)
# ----------------------
# Data import & handling
# ----------------------
# Variables
fact <- 2
res <- 1
span <- 300000
span <- 200000
# Countries
world <- st_read("data/world.shp")
# prj <- "+proj=eck4 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs"
# world <- st_transform(world, prj)
# Total population grid
r <- raster("data/gpw_v4_population_count_rev11_2020_1_deg.asc")
dots <- aggregate(r, fact=fact, fun=sum)
dots <- as(dots, 'SpatialPointsDataFrame')
dots <- st_as_sf(dots)
# dots <- st_transform(dots, prj)
colnames(dots) <- c("pop","geometry")
# ------------
# Computations
# ------------
dots$id <- c(1:nrow(dots))
mygrid <- CreateGrid(w = world, resolution = res,returnclass = "sf")
plot(st_geometry(mygrid), pch=20, cex = 0.2)
plot(st_geometry(dots), pch=20, col="red", add=T, cex = 0.2)
mymat <- CreateDistMatrix(knownpts = dots, unknownpts = mygrid)
mystewart$pop <- mystewart$OUTPUT / 1000
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 3500, 5000, 10000, 20000, 35000, 50000, 75000, 100000, 200000, 282647.75355)
length(bks)
summary(mystewart$pop)
length(bks)
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 3500, 5000, 10000, 20000, 35000, 50000, 75000, 100000, 165906.42)
length(bks)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 7, pal2 = "red.pal", n2 = 10)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols, border = "white", lwd = 0.2)
geojson_write(input=smooth, object_name = "smooth", file = "../data/smooth.geojson", overwrite = T)
summary(mystewart$pop)
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 3500, 5000, 10000, 20000, 35000, 50000, 75000, 100000, 165906.42)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 7, pal2 = "red.pal", n2 = 10)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols, border = "white", lwd = 0.2)
geojson_write(input=contourpoly, object_name = "smooth", file = "../data/smooth.geojson", overwrite = T)
st_write(contourpoly, "smooth.shp")
st_write(contourpoly, "smooth.shp", overwrite = T)
st_write(contourpoly, "smooth2.shp")
mystewart
mymat
res <- 5
fact <- 2
res <- 1
res <- 5
span <- 200000
# Countries
world <- st_read("data/world.shp")
# prj <- "+proj=eck4 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs"
# world <- st_transform(world, prj)
# Total population grid
r <- raster("data/gpw_v4_population_count_rev11_2020_1_deg.asc")
dots <- aggregate(r, fact=fact, fun=sum)
dots <- as(dots, 'SpatialPointsDataFrame')
dots <- st_as_sf(dots)
# dots <- st_transform(dots, prj)
colnames(dots) <- c("pop","geometry")
dots$id <- c(1:nrow(dots))
mygrid <- CreateGrid(w = world, resolution = res,returnclass = "sf")
plot(st_geometry(mygrid), pch=20, cex = 0.2)
plot(st_geometry(dots), pch=20, col="red", add=T, cex = 0.2)
head(mygrid)
dots$id <- c(1:nrow(dots))
mygrid <- CreateGrid(w = world, resolution = res,returnclass = "sf")
mygrid <- mygrid[mygrid$COORDX>= -180,]
mygrid <- mygrid[mygrid$COORDX<= 180,]
mygrid <- mygrid[mygrid$COORDY>= -90,]
mygrid <- mygrid[mygrid$COORDY<= 90,]
plot(st_geometry(mygrid), pch=20, cex = 0.2)
plot(st_geometry(dots), pch=20, col="red", add=T, cex = 0.2)
mymat <- CreateDistMatrix(knownpts = dots, unknownpts = mygrid)
mystewart <- stewart(knownpts = dots, unknownpts = mygrid,
matdist = mymat, varname = "pop",
typefct = "exponential", span = span,
beta = 3, returnclass = "sf", longlat = T)
mystewart$pop <- mystewart$OUTPUT / 1000
summary(mystewart$pop)
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 3500, 5000, 10000, 20000, 35000, 50000, 75000, 100000, 165906.42)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 7, pal2 = "red.pal", n2 = 10)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols, border = "white", lwd = 0.2)
geojson_write(input=contourpoly, object_name = "smooth", file = "../data/smooth.geojson", overwrite = T)
# -----
# Export
# ------
smooth <- st_cast(contourpoly, "POLYGON")
head(smooth)
geojson_write(input=contourpoly, object_name = "smooth", file = "../data/smooth.geojson", overwrite = T)
geojson_write(input=smooth, object_name = "smooth", file = "../data/smooth.geojson", overwrite = T)
# ----------------
# N. LAMBERT, 2019
# ----------------
setwd("/var/www/html/worldpop/R")
# Packages
library(raster)
library(sf)
library(cartography)
library(SpatialPosition)
library(geojsonio)
# ----------------------
# Data import & handling
# ----------------------
# Variables
fact <- 2
res <- 1
span <- 200000
# Countries
world <- st_read("data/world.shp")
# prj <- "+proj=eck4 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs"
# world <- st_transform(world, prj)
# Total population grid
r <- raster("data/gpw_v4_population_count_rev11_2020_1_deg.asc")
dots <- aggregate(r, fact=fact, fun=sum)
dots <- as(dots, 'SpatialPointsDataFrame')
dots <- st_as_sf(dots)
# dots <- st_transform(dots, prj)
colnames(dots) <- c("pop","geometry")
# ------------
# Computations
# ------------
dots$id <- c(1:nrow(dots))
mygrid <- CreateGrid(w = world, resolution = res,returnclass = "sf")
mygrid <- mygrid[mygrid$COORDX>= -180,]
mygrid <- mygrid[mygrid$COORDX<= 180,]
mygrid <- mygrid[mygrid$COORDY>= -90,]
mygrid <- mygrid[mygrid$COORDY<= 90,]
head(mygrid)
plot(st_geometry(mygrid), pch=20, cex = 0.2)
plot(st_geometry(dots), pch=20, col="red", add=T, cex = 0.2)
mymat <- CreateDistMatrix(knownpts = dots, unknownpts = mygrid)
mystewart$pop <- mystewart$OUTPUT / 1000
summary(mystewart$pop)
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 3500, 5000, 10000, 20000, 35000, 50000, 75000, 100000, 132002.02)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 7, pal2 = "red.pal", n2 = 10)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols, border = "white", lwd = 0.2)
mystewart <- stewart(knownpts = dots, unknownpts = mygrid,
matdist = mymat, varname = "pop",
typefct = "exponential", span = span,
beta = 3, returnclass = "sf", longlat = T)
mystewart$pop <- mystewart$OUTPUT / 1000
summary(mystewart$pop)
bks <- c(0, 10, 25, 50, 100, 250, 500, 1000, 2000, 3500, 5000, 10000, 20000, 35000, 50000, 75000, 100000, 166193.13)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
bks <- c(-1, 10, 25, 50, 100, 250, 500, 1000, 2000, 3500, 5000, 10000, 20000, 35000, 50000, 75000, 100000, 166193.13)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 7, pal2 = "red.pal", n2 = 10)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 8, pal2 = "red.pal", n2 = 10)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols, border = "white", lwd = 0.2)
contourpoly
bks <- c(-1, 10, 25, 50, 100, 250, 500, 1000, 2000, 3500, 5000, 10000, 20000, 35000, 50000, 75000, 100000, 166193.13)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 8, pal2 = "red.pal", n2 = 10)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols, border = "white", lwd = 0.2)
contourpoly
bks <- c(-1, 10, 25, 50, 100, 250, 500, 1000, 2000, 3500, 5000, 10000, 20000, 35000, 50000, 75000, 100000, 170000)
contourpoly <- isopoly(x = mystewart, breaks = bks, var = "pop", returnclass = "sf", mask = world)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 8, pal2 = "red.pal", n2 = 10)
contourpoly$cols <- carto.pal(pal1 = "blue.pal", n1 = 7, pal2 = "red.pal", n2 = 10)
typoLayer(x = contourpoly, var="center",col = contourpoly$cols, border = "white", lwd = 0.2)
# -----
# Export
# ------
smooth <- st_cast(contourpoly, "POLYGON")
View(contourpoly)
# -----
# Export
# ------
smooth <- st_cast(contourpoly, "POLYGON")
geojson_write(input=smooth, object_name = "smooth", file = "../data/smooth.geojson", overwrite = T)
View(smooth)
geojson_write(input=smooth, object_name = "smooth", file = "../data/smooth.geojson", overwrite = T)
head(smooth)
class(smooth)
data.frale(smooth)
data.frame(smooth)
colnames(smooth)
legend <- data.frame(smooth[,c("id","max","cols")])
legend
legend <- as.data.frame(smooth[,c("id","max","cols")])
legend
legend <- as.data.frame(smooth)
class(legend)
head(legend)
legend <- legend[,c("id","max","cols")]
head(legend)
head(legend)
legend2 <- unique (legend)
legend2
legend <- as.data.frame(smooth)
legend <- legend[,c("id","max","cols")]
legend <- as.data.frame(smooth)
legend2 <- unique (legend)
legend <- legend[,c("id","max","cols")]
legend
legend <- as.data.frame(smooth)
legend <- legend[,c("id","max","cols")]
legend2 <- unique (legend)
legend <- unique (legend)
head(legend)
legend
colnames(legend) <- c("id","val","col")
write.csv(x = legend,file = "../data/legend.csv")
write.csv(x = legend,file = "../data/legend.csv", row.names = F)
write.csv(x = legend,file = "../data/legend.tsv", row.names = F, sep = "\t")
write.csv(x = legend,file = "../data/legend.tsv", row.names = F,sep = "\n")
write.csv(x = legend,file = "../data/legend.tsv", row.names = F,sep = "  ")
write.csv2(x = legend,file = "../data/legend.tsv", row.names = F,sep = "  ")
write.csv(x = legend,file = "../data/legend.tsv", row.names = F)
legend$val <- round(legend$val,0)
legend$val
test <- legend[order(-legend$val),]
test
legend <- as.data.frame(smooth)
legend <- legend[,c("id","max","cols")]
legend <- unique (legend)
colnames(legend) <- c("id","val","col")
legend$val <- round(legend$val,0)
legend <- legend[order(-legend$val),]
write.csv(x = legend,file = "../data/legend.tsv", row.names = F)
legend
write.csv(x = legend,file = "../data/legend.tsv", row.names = F)
write.csv(x = legend,file = "../data/legend.csv", row.names = F)
